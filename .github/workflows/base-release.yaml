name: Reusable release workflow

on:
  workflow_call:
    inputs:
      distribution:
        required: true
        type: string
      goos:
        required: true
        type: string
      goarch:
        required: true
        type: string

env:
  # renovate: datasource=github-tags depName=goreleaser-pro packageName=goreleaser/goreleaser-pro
  GORELEASER_PRO_VERSION: v2.7.0

jobs:
  prepare:
    strategy:
      matrix:
        GOOS: ${{ fromJSON( inputs.goos) }}
        GOARCH: ${{ fromJSON( inputs.goarch) }}
    runs-on: ubuntu-24.04

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - uses: sigstore/cosign-installer@c56c2d3e59e4281cc41dea2217323ba5694b171e # v3.8.0

      - uses: anchore/sbom-action/download-syft@f325610c9f50a54015d37c8d16cb3b0e2c8f4de0 # v0.18.0

      - uses: docker/setup-qemu-action@4574d27a4764455b42196d70a065bc6853246a25 # v3.4.0
        with:
          platforms: arm64

      - uses: docker/setup-buildx-action@f7ce87c1d6bead3e36075b2ce75da1f6cc28aaca # v3.9.0

      - uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34 # v5.3.0
        with:
          go-version: "~1.24"
          check-latest: true

      - name: Setup wixl # Required to build MSI packages for Windows
        if: ${{ matrix.GOOS == 'windows' }}
        run: |
          sudo apt-get update
          sudo apt-get install -y wixl

      - name: Setup mingw-w64 # Required to build Windows AMD64 packages
        if: ${{ matrix.GOOS == 'windows' && matrix.GOARCH == 'amd64' }}
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-mingw-w64-x86-64-win32

      - name: Setup llvm-mingw # Required to build Windows ARM64 packages
        if: ${{ matrix.GOOS == 'windows' && matrix.GOARCH == 'arm64' }}
        run: |
          wget https://github.com/mstorsjo/llvm-mingw/releases/download/20250402/llvm-mingw-20250402-ucrt-ubuntu-20.04-x86_64.tar.xz
          tar -xJf llvm-mingw-20250402-ucrt-ubuntu-20.04-x86_64.tar.xz
          sudo mv llvm-mingw-20250402-ucrt-ubuntu-20.04-x86_64 /opt/llvm-mingw
          sudo ln -s /opt/llvm-mingw/bin/aarch64-w64-mingw32-gcc /usr/local/bin/aarch64-w64-mingw32-gcc

      - name: Run version update script
        run: ./scripts/pre-update-version.sh "${{ github.ref_name }}"

      - name: Generate distribution sources
        run: make generate-sources

      - name: Login to GitHub Package Registry
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - shell: bash
        run: |
          echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - uses: goreleaser/goreleaser-action@90a3faa9d0182683851fbfa97ca1a2cb983bfca3 # v6.2.1
        with:
          distribution: goreleaser-pro
          version: ${{ env.GORELEASER_PRO_VERSION }}
          workdir: distributions/${{ inputs.distribution }}
          args: release --clean --split --timeout 2h
        env:
          GOOS: ${{ matrix.GOOS }}
          GOARCH: ${{ matrix.GOARCH }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COSIGN_YES: true
          GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}

      - uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4.6.0
        with:
          name: artifacts-${{ inputs.distribution }}-${{ matrix.GOOS }}-${{ matrix.GOARCH }}
          path: distributions/${{ inputs.distribution }}/dist/**/*
          if-no-files-found: error

  release:
    name: ${{ inputs.distribution }} Release
    runs-on: ubuntu-24.04
    needs: prepare

    permissions:
      id-token: write
      packages: write
      contents: write
      security-events: write

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - uses: sigstore/cosign-installer@c56c2d3e59e4281cc41dea2217323ba5694b171e # v3.8.0

      - uses: anchore/sbom-action/download-syft@f325610c9f50a54015d37c8d16cb3b0e2c8f4de0 # v0.18.0

      - uses: docker/setup-qemu-action@4574d27a4764455b42196d70a065bc6853246a25 # v3.4.0
        with:
          platforms: arm64

      - uses: docker/setup-buildx-action@f7ce87c1d6bead3e36075b2ce75da1f6cc28aaca # v3.9.0

      - uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34 # v5.3.0
        with:
          go-version: "~1.24"
          check-latest: true

      - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          pattern: artifacts-${{ inputs.distribution }}-*
          path: distributions/${{ inputs.distribution }}/dist
          merge-multiple: true

      - name: Display structure of downloaded files
        run: ls -R distributions/${{ inputs.distribution }}/dist

      - name: Login to GitHub Package Registry
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: goreleaser/goreleaser-action@90a3faa9d0182683851fbfa97ca1a2cb983bfca3 # v6.2.1
        with:
          distribution: goreleaser-pro
          version: ${{ env.GORELEASER_PRO_VERSION }}
          workdir: distributions/${{ inputs.distribution }}
          args: continue --merge --timeout 2h
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COSIGN_YES: true
          GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}

      - name: Upload artifacts
        uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4.6.0
        with:
          name: artifacts-${{ inputs.distribution }}
          path: distributions/${{ inputs.distribution }}/dist/**/*
          if-no-files-found: error

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@18f2510ee396bbf400402947b394f2dd8c87dbb0 # 0.29.0
        with:
          image-ref: ghcr.io/axoflow/axoflow-otel-collector/axoflow-otel-collector:latest
          format: sarif
          output: trivy-results.sarif

      - name: Upload Trivy scan results as artifact
        uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4.6.0
        with:
          name: "[${{ github.job }}] Trivy scan results"
          path: trivy-results.sarif
          retention-days: 5

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@9e8d0789d4a0fa9ceb6b1738f7e269594bdd67f0 # v3.28.9
        with:
          sarif_file: trivy-results.sarif
